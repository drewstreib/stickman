#!/bin/bash
#
# Pre-commit hook for stickman project
# Runs formatting, linting, and tests before allowing commit
#

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre-commit checks...${NC}"

# Check if we're in the right directory
if [ ! -f "Makefile" ] || [ ! -f "stickman.c" ]; then
    echo -e "${RED}Error: Not in stickman project root directory${NC}"
    exit 1
fi

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Track if any checks failed
CHECKS_FAILED=0

echo "Step 1/4: Checking code formatting..."
if command_exists clang-format; then
    # Check if files need formatting
    UNFORMATTED_FILES=$(find . -name "*.c" -o -name "*.h" | grep -v "./tests/" | head -20)
    if [ -n "$UNFORMATTED_FILES" ]; then
        for file in $UNFORMATTED_FILES; do
            if ! diff -q "$file" <(clang-format "$file") >/dev/null 2>&1; then
                echo -e "${RED}✗ $file needs formatting${NC}"
                echo -e "${YELLOW}  Run: make format${NC}"
                CHECKS_FAILED=1
            fi
        done
    fi
    
    if [ $CHECKS_FAILED -eq 0 ]; then
        echo -e "${GREEN}✓ Code formatting OK${NC}"
    fi
else
    echo -e "${YELLOW}⚠ clang-format not found, skipping format check${NC}"
fi

echo "Step 2/4: Running static analysis..."
if command_exists "${HOMEBREW_PREFIX:-/opt/homebrew}/opt/llvm/bin/clang-tidy" || command_exists clang-tidy; then
    # Run clang-tidy and capture output
    if ! make lint >/dev/null 2>&1; then
        echo -e "${RED}✗ clang-tidy found issues${NC}"
        echo -e "${YELLOW}  Run: make lint (to see details)${NC}"
        CHECKS_FAILED=1
    else
        echo -e "${GREEN}✓ Static analysis OK${NC}"
    fi
else
    echo -e "${YELLOW}⚠ clang-tidy not found, skipping lint check${NC}"
fi

echo "Step 3/4: Running additional static analysis..."
if command_exists cppcheck; then
    # Run cppcheck and check for actual errors only (ignore style warnings for pre-commit)
    CPPCHECK_OUTPUT=$(cppcheck --error-exitcode=1 --quiet stickman.c 2>&1 || true)
    if echo "$CPPCHECK_OUTPUT" | grep -E "(error:|syntax error)"; then
        echo -e "${RED}✗ cppcheck found errors${NC}"
        echo -e "${YELLOW}  Run: make check (to see details)${NC}"
        CHECKS_FAILED=1
    else
        echo -e "${GREEN}✓ Additional static analysis OK${NC}"
    fi
else
    echo -e "${YELLOW}⚠ cppcheck not found, skipping additional checks${NC}"
fi

echo "Step 4/4: Running unit tests..."
if make test >/dev/null 2>&1; then
    echo -e "${GREEN}✓ Unit tests passed${NC}"
else
    echo -e "${RED}✗ Unit tests failed${NC}"
    echo -e "${YELLOW}  Run: make test (to see details)${NC}"
    CHECKS_FAILED=1
fi

# Final result
if [ $CHECKS_FAILED -eq 1 ]; then
    echo ""
    echo -e "${RED}❌ Pre-commit checks FAILED${NC}"
    echo -e "${YELLOW}Fix the issues above and try committing again.${NC}"
    echo -e "${YELLOW}Or run 'make verify' to fix and check everything.${NC}"
    exit 1
else
    echo ""
    echo -e "${GREEN}✅ All pre-commit checks PASSED${NC}"
    exit 0
fi